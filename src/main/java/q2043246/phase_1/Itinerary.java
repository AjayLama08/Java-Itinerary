/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package q2043246.phase_1;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

/**
 *
 * @author q2043246
 */
public class Itinerary {

    private final String referenceNumber;
    private final String client;
    private int attendeesNumber;
    private String attendeesNumberPrint;
    private int activitiesNumber;
    private String activitiesNumberPrint;
    private double cost;
    private double discount;
    private double discountAmount;
    //List to stored selected activities
    private final List<Activity> selectedActivities;
    //List to store itinerary add ons
    private final List<ItineraryAddOns> itineraryAddOns;

    public Itinerary(String referenceNumber, String client, int attendeesNumber, int activitiesNumber, double cost, double discount) {
        this.referenceNumber = referenceNumber;
        this.client = client;
        this.attendeesNumber = attendeesNumber;
        this.activitiesNumber = activitiesNumber;
        this.cost = cost;
        this.discount = discount;
        this.selectedActivities = new ArrayList<>();
        this.itineraryAddOns = new ArrayList<>();
    }

    public String getReferenceNumber() {
        //Random class has been instantiated
        Random random = new Random();
        //Client name's characters are used to generate reference number
        char firstLetter = client.charAt(0);
        char secondLetter = client.charAt(1);
        //Random digits are generated by using Random class
        int firstDigit = random.nextInt(10);
        int secondDigit = random.nextInt(10);
        int thirdDigit = random.nextInt(10);
        String thirdLetter = client.substring(client.indexOf(" ") + 1, client.indexOf(" ") + 2);
        //RefNumber is formatted as the required format for reference number by using String.format
        String refNumber = String.format("%s%s%d%d%d%s", firstLetter, secondLetter, firstDigit, secondDigit, thirdDigit, thirdLetter);
        return refNumber;
    }

    //get method to take client's first name's first letter and the last name
    public String getClient() {
        String firstName = client.substring(0, 1);
        int spaceIndex = client.indexOf(" ");
        String surname = client.substring(spaceIndex + 1);
        String displayClient = firstName.concat(" " + surname);
        return displayClient;
    }

    public int getAttendeesNumber() {
        return attendeesNumber;
    }

    //get method for attendees number in words for attendess count less than 6
    public String getAttendeesNumberPrint() {
        switch (attendeesNumber) {
            case 1:
                return "One";
            case 2:
                return "Two";
            case 3:
                return "Three";
            case 4:
                return "Four";
            case 5:
                return "Five";
            default:
                return String.valueOf(attendeesNumber);
        }
    }

    public void setAttendeesNumber(int clientNumber) {
        attendeesNumber = clientNumber;

    }

    public int getActivitiesNumber() {
        return activitiesNumber;
    }
    
    //get method for activities number in words for activity count less than 6
    public String getActivitiesNumberPrint() {
        switch (activitiesNumber) {
            case 1:
                return "One";
            case 2:
                return "Two";
            case 3:
                return "Three";
            case 4:
                return "Four";
            case 5:
                return "Five";
            default:
                return String.valueOf(activitiesNumber);

        }
    }

    public void setActivitiesNumberPrint(int activityCount) {
        activitiesNumber = activityCount;
    }

    public double getCost() {
        return cost;
    }

    //set method to calulate cost after discount
    public void setCost(double totalCost, int clientNumber) {
        cost = (totalCost - discountAmount);
    }

    public double getDiscount() {
        return discount;
    }

    //get method to display discount percentage
    public String getFormattedDiscount() {
        return discount + "%";
    }

    //set method to set discount based on activity number and attendees number
    public void setDiscount(int activityNumber, int attendeesNumber) {

        if (activityNumber >= 1 && activityNumber <= 2 && attendeesNumber < 10) {
            discount = 0;
        } else if (activityNumber >= 1 && activityNumber <= 2 && attendeesNumber >= 10 && attendeesNumber <= 20) {
            discount = 5;
        } else if (activityNumber >= 1 && activityNumber <= 2 && attendeesNumber > 20) {
            discount = 8;
        } else if (activityNumber >= 3 && activityNumber <= 5 && attendeesNumber < 10) {
            discount = 5;
        } else if (activityNumber >= 3 && activityNumber <= 5 && attendeesNumber >= 10 && attendeesNumber <= 20) {
            discount = 8;
        } else if (activityNumber >= 3 && activityNumber <= 5 && attendeesNumber > 20) {
            discount = 12;
        } else if (activityNumber >= 6 && attendeesNumber < 10) {
            discount = 10;
        } else if (activityNumber >= 6 && attendeesNumber >= 10 && attendeesNumber <= 20) {
            discount = 12;
        } else if (activityNumber >= 6 && attendeesNumber > 20) {
            discount = 14;
        }
    }

    //set method to calculate discount amount
    public void setDiscountAmount(double totalCost) {
        discountAmount = (discount / 100) * totalCost;
    }

    public double getDiscountAmount() {
        return discountAmount;
    }

    //get method to get activities added to the itinerary
    public List<Activity> getActivities() {
        return selectedActivities;
    }

    //method that allows activity to be added to the itinerary
    public void addActivity(Activity Activity) {
        selectedActivities.add(Activity);

    }

    //get method to get tinerary add ons added to the itinerary
    public List<ItineraryAddOns> getItineraryAddOns() {
        return itineraryAddOns;
    }

    //method that allows itinerary add ons to be added to the itinerary
    public void addItineraryAddOns(ItineraryAddOns ItineraryAddOns) {
        this.itineraryAddOns.add(ItineraryAddOns);
    }

}
